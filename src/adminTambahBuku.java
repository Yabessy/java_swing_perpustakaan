/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Imanu
 */
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class adminTambahBuku extends javax.swing.JFrame {

    /**
     * Creates new form adminTambahBuku
     */
    public Statement st;
    public ResultSet rs;
    Connection conn = connection.connection.openConnection();

    public adminTambahBuku() {
        initComponents();
        showData();
    }

    private void clear() {
        title.setText("");
        isbn.setText("");
        tags.setText("");
        publisher.setText("");
        author.setText("");
        remaining_books.setText("");
    }

    private void dataSearch() {
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT * FROM books WHERE " + search_option.getSelectedItem() + " LIKE '%" + search.getText() + "%'");
            DefaultTableModel model = new DefaultTableModel();
//            model.addColumn("no");
            model.addColumn("id");
            model.addColumn("book_type");
            model.addColumn("title");
            model.addColumn("isbn");
            model.addColumn("tags");
            model.addColumn("release_date");
            model.addColumn("publisher");
            model.addColumn("author");
            model.addColumn("remaining_books");
//            int no = 1;

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            while (rs.next()) {
                String type = rs.getBoolean("book_type") ? "akademik" : "non_akademik";
                Object[] data = {
                    //                   no ++,
                    rs.getString("id"),
                    type,
                    rs.getString("title"),
                    rs.getString("isbn"),
                    rs.getString("tags"),
                    rs.getString("release_date"),
                    rs.getString("publisher"),
                    rs.getString("author"),
                    rs.getString("remaining_books"),};
                model.addRow(data);
                book_table.setModel(model);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void showData() {
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT * FROM books");
            DefaultTableModel model = new DefaultTableModel();
//            model.addColumn("no");
            model.addColumn("id");
            model.addColumn("book_type");
            model.addColumn("title");
            model.addColumn("isbn");
            model.addColumn("tags");
            model.addColumn("release_date");
            model.addColumn("publisher");
            model.addColumn("author");
            model.addColumn("remaining_books");
//            int no = 1;

            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            while (rs.next()) {
                String type = rs.getBoolean("book_type") ? "akademik" : "non_akademik";
                Object[] data = {
                    //                   no ++,
                    rs.getString("id"),
                    type,
                    rs.getString("title"),
                    rs.getString("isbn"),
                    rs.getString("tags"),
                    rs.getString("release_date"),
                    rs.getString("publisher"),
                    rs.getString("author"),
                    rs.getString("remaining_books"),};
                model.addRow(data);
                book_table.setModel(model);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Validasi data", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lending = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        user = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        search_option = new javax.swing.JComboBox<>();
        search = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        isbn = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tags = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        publisher = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        author = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        remaining_books = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        book_table = new javax.swing.JTable();
        release_date = new com.toedter.calendar.JDateChooser();
        book_type = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Buku");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(150, 20, 242));

        lending.setText("lendings");
        lending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lendingActionPerformed(evt);
            }
        });

        jButton1.setText("librarians");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        user.setText("users");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lending)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(user)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lending)
                    .addComponent(jButton1)
                    .addComponent(user))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(150, 20, 242));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Search");

        search_option.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id", "title", "isbn" }));

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(search_option, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel1.setText("book_type");

        jLabel2.setText("title");

        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });

        jLabel3.setText("isbn");

        jLabel4.setText("tags");

        jLabel5.setText("release_date");

        jLabel6.setText("publisher");

        jLabel7.setText("author");

        jLabel8.setText("amount");

        save.setText("Save");
        save.setToolTipText("");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        book_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "title", "isbn", "genre", "release_date", "publisher", "author", "remaining_books", "synopsis", "book_cover"
            }
        ));
        book_table.setInheritsPopupMenu(true);
        book_table.getTableHeader().setReorderingAllowed(false);
        book_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                book_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(book_table);

        book_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "akademik", "non-akademik" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tags, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(title)
                    .addComponent(isbn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(book_type, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(18, 18, 18)
                        .addComponent(cancel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(author)
                    .addComponent(remaining_books)
                    .addComponent(release_date, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(book_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(release_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(publisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remaining_books, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(tags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(delete)
                    .addComponent(cancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try {
            st = conn.createStatement();
            if (title.getText().equals("")
                    || isbn.getText().equals("")
                    || tags.getText().equals("")
                    || publisher.getText().equals("")
                    || author.getText().equals("")
                    || remaining_books.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "data tidak lengkap", "Validasi data", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (save.getText().equals("Save")) {
                String check = "SELECT * FROM books WHERE title = '" + title.getText() + "'";
                rs = st.executeQuery(check);
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Title already used");
                } else {
                    try {
//                        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
                        String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
                        String the_release = new SimpleDateFormat("yyyy-MM-dd").format(release_date.getDate());
                        Integer converted_book_type = book_type.getSelectedItem().equals("akademik") ? 1 : 0;
                        String sql = "INSERT INTO books (created_at,updated_at,book_type,title,isbn,tags,release_date,publisher,author,remaining_books) VALUES("
                                + "'" + timeStamp + "',"
                                + "'" + timeStamp + "',"
                                + converted_book_type
                                + ",'" + title.getText()
                                + "','" + isbn.getText()
                                + "','" + tags.getText()
                                + "','" + the_release
                                + "','" + publisher.getText()
                                + "','" + author.getText()
                                + "','" + Integer.valueOf(remaining_books.getText()) + "')";
                        st.executeUpdate(sql);
                        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
                        showData();
                        clear();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            } else if (save.getText().equals("Update")) {
                try {
                    String timestamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
                    String the_release = new SimpleDateFormat("yyyy-MM-dd").format(release_date.getDate());
                    int converted_book_type = book_type.getSelectedItem().equals("akademik") ? 1 : 0;
                    String sql = "UPDATE books SET "
                            + "book_type = " + converted_book_type + ", "
                            + "title = '" + title.getText() + "', "
                            + "isbn = '" + isbn.getText() + "', "
                            + "tags = '" + tags.getText() + "', "
                            + "release_date = '" + the_release + "', "
                            + "publisher = '" + publisher.getText() + "', "
                            + "author = '" + author.getText() + "', "
                            + "remaining_books = '" + Integer.valueOf(remaining_books.getText()) + "' "
                            + "WHERE id = " + book_table.getValueAt(book_table.getSelectedRow(), 0);
                    System.out.println(sql);
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "data berhasil diubah");
                    showData();
                    clear();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        save.setText("Save");
        clear();
    }//GEN-LAST:event_cancelActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleActionPerformed

    private void book_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_book_tableMouseClicked
//         TODO add your handling code here:
        int book_type_index = (book_table.getValueAt(book_table.getSelectedRow(), 1).toString().equals("akademik")) ? 0 : 1;
        book_type.setSelectedIndex(book_type_index);
        title.setText(book_table.getValueAt(book_table.getSelectedRow(), 2).toString());
        isbn.setText(book_table.getValueAt(book_table.getSelectedRow(), 3).toString());
        tags.setText(book_table.getValueAt(book_table.getSelectedRow(), 4).toString());

        try {
            release_date.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(book_table.getValueAt(book_table.getSelectedRow(), 5).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(adminTambahBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
        publisher.setText(book_table.getValueAt(book_table.getSelectedRow(), 6).toString());
        author.setText(book_table.getValueAt(book_table.getSelectedRow(), 7).toString());
        remaining_books.setText(book_table.getValueAt(book_table.getSelectedRow(), 8).toString());

        save.setText("Update");

    }//GEN-LAST:event_book_tableMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        if (title.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Mauh hapus apa?");
        } else {
            int jawab = JOptionPane.showConfirmDialog(null, "Yakin menghapus data?", "konfirmasi", JOptionPane.YES_NO_OPTION);
            if (jawab == 0) {
                try {
                    st = conn.createStatement();
                    String sql = "DELETE FROM books WHERE id = '" + book_table.getValueAt(book_table.getSelectedRow(), 0) + "'";
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                    showData();
                    clear();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                System.out.println("no");
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void lendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lendingActionPerformed
        adminPeminjaman adminPeminjaman1 = new adminPeminjaman();
        adminPeminjaman1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lendingActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        dataSearch();
    }//GEN-LAST:event_searchKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        adminPustakawan adminPustakawan1 = new adminPustakawan();
        adminPustakawan1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        adminPengguna adminpenPengguna1 = new adminPengguna();
        adminpenPengguna1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_userActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(adminTambahBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(adminTambahBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(adminTambahBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(adminTambahBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new adminTambahBuku().setVisible(true);
//            }
//        });  
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author;
    private javax.swing.JTable book_table;
    private javax.swing.JComboBox<String> book_type;
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JTextField isbn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lending;
    private javax.swing.JTextField publisher;
    private com.toedter.calendar.JDateChooser release_date;
    private javax.swing.JTextField remaining_books;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JComboBox<String> search_option;
    private javax.swing.JTextField tags;
    private javax.swing.JTextField title;
    private javax.swing.JButton user;
    // End of variables declaration//GEN-END:variables
}
